import { StableDiffusionResponse } from "@/types/generation";
import { TEXT2IMG_URL } from "./constants";

export const createStableDiffusionGeneration = async (
  prompt: string
): Promise<StableDiffusionResponse> => {
  try {
    const myHeaders = new Headers();
    myHeaders.append("Content-Type", "application/json");

    console.log("Prompt: ", prompt);

    const raw = JSON.stringify({
      key: process.env.STABLE_DIFFUSION_API_KEY,
      prompt: prompt,
      negative_prompt: null,
      width: "1024",
      height: "1024",
      samples: "1",
      num_inference_steps: "20",
      seed: null,
      guidance_scale: 7.5,
      multi_lingual: "no",
      panorama: "no",
      self_attention: "no",
      upscale: "no",
      embeddings_model: null,
      webhook: null,
      track_id: null,
      safety_checker: false,
    });

    console.log("Raw Request Stable Diffusion: ", raw);

    const requestOptions = {
      method: "POST",
      headers: myHeaders,
      body: raw,
    };

    console.log("Making request to stable diffusion with prompt: ", prompt);

    const response = await fetch(TEXT2IMG_URL, requestOptions);
    const data = await response.json();
    console.log("Stable diffusion response: ", data);

    if (!response.ok) {
      throw new Error(`API returned error: ${JSON.stringify(data)}`);
    }

    if (!data.output || data.output.length === 0) {
      throw new Error("No image was generated by the API");
    }

    return data;
  } catch (error: unknown) {
    const errorMessage =
      error instanceof Error ? error.message : "Unknown error";
    throw new Error(`Stable Diffusion API error: ${errorMessage}`);
  }
};
